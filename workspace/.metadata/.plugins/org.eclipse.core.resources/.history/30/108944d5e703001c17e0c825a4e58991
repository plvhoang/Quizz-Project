package servlet;

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;

import java.sql.Connection;
import java.sql.SQLException;

import java.io.IOException;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.Part;

import model.Product;
import utils.DBUtils;
import utils.MyUtils;

/**
 * Servlet implementation class ProductAddServlet
 */
@WebServlet("/addProduct")
@MultipartConfig(fileSizeThreshold = 1024 * 1024 * 2, // 2MB
maxFileSize = 1024 * 1024 * 10, // 10MB
maxRequestSize = 1024 * 1024 * 50)
public class ProductAddServlet extends HttpServlet {
	public static final String UPLOAD_DIR = "images";
	public String dbFileName = "";
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public ProductAddServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        RequestDispatcher dispatcher = request.getServletContext()
                .getRequestDispatcher("/WEB-INF/views/addProductView.jsp");
        dispatcher.forward(request, response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		Connection conn = MyUtils.getStoredConnection(request);
		
		String errorString = null;
		
		String name = (String) request.getParameter("name");
        String priceStr = (String) request.getParameter("price");
        float price = 0;
        String instockStr = (String) request.getParameter("instock");
        int instock = 0;
        String description = (String) request.getParameter("description");
        String manufacturer = (String) request.getParameter("manufacturer");
        String category = (String) request.getParameter("category");
        String condition = (String) request.getParameter("condition");
        String imgurl = null;
        
        try {
            price = Float.parseFloat(priceStr);
            instock = Integer.parseInt(instockStr);
        } catch (Exception e) {
        	errorString = "Invalid number format!";
        }
        
        Product product = new Product();
        
        product.setName(name);
        product.setPrice(price);
        product.setInstock(instock);
        if (description != null)
        	product.setDescription(description);
        product.setManufacturer(manufacturer);
        if (category != null)
        	product.setCategory(category);
        product.setCondition(condition);
        
        
        /*
         * UPLOAD PRODUCT IMG
         */
        Part part = request.getPart("product-image");//
        String fileName = extractFileName(part);//file name
        
        /**
         * *** Get The Absolute Path Of The Web Application ****
         */
        String applicationPath = getServletContext().getRealPath("");
        String uploadPath = applicationPath + File.separator + UPLOAD_DIR;
        System.out.println("applicationPath:" + applicationPath);
        File fileUploadDirectory = new File(uploadPath);
        if (!fileUploadDirectory.exists()) {
            fileUploadDirectory.mkdirs();
        }
        String savePath = File.separator + fileName;
        System.out.println("savePath: " + savePath);
        String sRootPath = new File(savePath).getAbsolutePath();
        System.out.println("sRootPath: " + sRootPath);
        part.write(savePath + File.separator);
        File fileSaveDir1 = new File(savePath);
        /*if you may have more than one files with same name then you can calculate some random characters
         and append that characters in fileName so that it will  make your each image name identical.*/
        dbFileName = UPLOAD_DIR + File.separator + fileName;
        part.write(savePath + File.separator);
        
        imgurl = UPLOAD_DIR + "/" + fileName;
        product.setImgurl(imgurl);
        /*
         * END OF UPLOADING
         */
        
        System.out.println(errorString);
        
        // Thêm sản phẩm vào database.
        if (errorString == null) {
            try {
                DBUtils.insertProduct(conn, product);
            } catch (SQLException e) {
                e.printStackTrace();
                errorString = e.getMessage();
            }
        }
        

        // Lưu thông tin vào request attribute trước khi forward sang views.
        request.setAttribute("errorString", errorString);
        request.setAttribute("product", product);
 
        // Nếu có lỗi forward (chuyển tiếp) sang trang 'edit'.
        if (errorString != null) {
            RequestDispatcher dispatcher = request.getServletContext()
                    .getRequestDispatcher("/WEB-INF/views/addProductView.jsp");
            dispatcher.forward(request, response);
        }
        // Nếu mọi thứ tốt đẹp.
        // Redirect (chuyển hướng) sang trang danh sách sản phẩm.
        else {
            response.sendRedirect(request.getContextPath() + "/productList");
        }
	}

	private String extractFileName(Part part) {
		String contentDisp = part.getHeader("content-disposition");
		System.out.println(contentDisp);
        return contentDisp;
	}
	

}

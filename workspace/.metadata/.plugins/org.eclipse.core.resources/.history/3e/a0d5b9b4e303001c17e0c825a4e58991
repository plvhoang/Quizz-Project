package servlet;

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;

import java.sql.Connection;
import java.sql.SQLException;

import java.io.IOException;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.Part;

import model.Product;
import utils.DBUtils;
import utils.MyUtils;

/**
 * Servlet implementation class ProductAddServlet
 */
@WebServlet("/addProduct")
public class ProductAddServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public ProductAddServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        RequestDispatcher dispatcher = request.getServletContext()
                .getRequestDispatcher("/WEB-INF/views/addProductView.jsp");
        dispatcher.forward(request, response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		Connection conn = MyUtils.getStoredConnection(request);
		
		String errorString = null;
		
		String name = (String) request.getParameter("name");
        String priceStr = (String) request.getParameter("price");
        float price = 0;
        String instockStr = (String) request.getParameter("instock");
        int instock = 0;
        String description = (String) request.getParameter("description");
        String manufacturer = (String) request.getParameter("manufacturer");
        String category = (String) request.getParameter("category");
        String condition = (String) request.getParameter("condition");
        String imgurl = null;
        
        try {
            price = Float.parseFloat(priceStr);
            instock = Integer.parseInt(instockStr);
        } catch (Exception e) {
        	/errorString = "Invalid number format!";
        }
        
        Product product = new Product();
        
        product.setName(name);
        product.setPrice(price);
        product.setInstock(instock);
        if (description != null)
        	product.setDescription(description);
        product.setManufacturer(manufacturer);
        if (category != null)
        	product.setCategory(category);
        product.setCondition(condition);
        
        
        /*
         * UPLOAD PRODUCT IMG
         */
        Part part = request.getPart("file");//
        String fileName = extractFileName(part);//file name
        
        if (imgurl == null)
        	errorString = "Failed to upload image.";
        
        /*
         * END OF UPLOADING
         */
        
        System.out.println(errorString);
        
        // Thêm sản phẩm vào database.
        if (errorString == null) {
            try {
                DBUtils.insertProduct(conn, product);
            } catch (SQLException e) {
                e.printStackTrace();
                errorString = e.getMessage();
            }
        }
        

        // Lưu thông tin vào request attribute trước khi forward sang views.
        request.setAttribute("errorString", errorString);
        request.setAttribute("product", product);
 
        // Nếu có lỗi forward (chuyển tiếp) sang trang 'edit'.
        if (errorString != null) {
            RequestDispatcher dispatcher = request.getServletContext()
                    .getRequestDispatcher("/WEB-INF/views/addProductView.jsp");
            dispatcher.forward(request, response);
        }
        // Nếu mọi thứ tốt đẹp.
        // Redirect (chuyển hướng) sang trang danh sách sản phẩm.
        else {
            response.sendRedirect(request.getContextPath() + "/productList");
        }
	}

	private String extractFileName(Part part) {
        String contentDisp = part.getHeader("content-disposition");
        String[] items = contentDisp.split(";");
        for (String s : items) {
            if (s.trim().startsWith("filename")) {
                return s.substring(s.indexOf("=") + 2, s.length() - 1);
            }
        }
        return "";
	}
	

}

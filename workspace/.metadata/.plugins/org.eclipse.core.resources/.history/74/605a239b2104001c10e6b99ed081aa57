package servlet;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import model.CartItem;
import model.Product;
import model.UserAccount;
import utils.DBUtils;
import utils.MyUtils;

/**
 * Servlet implementation class CartServlet
 */
@WebServlet("/cart")
public class CartServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public CartServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		HttpSession session = request.getSession();
		UserAccount loginedUser = MyUtils.getLoginedUser(session);
		Connection conn = MyUtils.getStoredConnection(request);
		PrintWriter out = response.getWriter();
		
		if (loginedUser == null) {
            // Redirect (Chuyển hướng) tới trang login.
            response.sendRedirect(request.getContextPath() + "/login");
            return;
        }
		
		
		/*
		 * Thêm item vào giỏ hàng
		 */
		
		String addItem = request.getParameter("addCartItem");
		int addCode;
		
		if (addItem != null) {
			addCode = Integer.parseInt(addItem);
			try {
				if (DBUtils.findCartItem(conn, loginedUser.getUsername(), addCode))
					DBUtils.updateCartItem(conn, loginedUser.getUsername(), addCode);
				else 
					DBUtils.addCartItem(conn, loginedUser.getUsername(), addCode);
				System.out.println("adding...");
			} catch (SQLException e) {
				System.out.print("Error while adding cart item...");
				e.printStackTrace();
			}
		}
		
		
		/*
		 * Xóa item khỏi giỏ hàng
		 */
		String rmvItem = request.getParameter("removeCartItem");
		int rmvCode;
		
		if (rmvItem != null) {
			rmvCode = Integer.parseInt(rmvItem);
			try {
				DBUtils.removeCartItem(conn, loginedUser.getUsername(), rmvCode);
			} catch (SQLException e) {
				System.out.print("Error while removing cart item...");
				e.printStackTrace();
			}
		}
		
		
		
		
		// Lấy danh sách sản phẩm trong giỏ hàng
		List<CartItem> cartItemList = null;
		List<Product> productList = null;
        try {
        	productList = DBUtils.queryProduct(conn);
        	cartItemList = DBUtils.queryCartItem(conn, loginedUser.getUsername());
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
        request.setAttribute("productList", productList);
        request.setAttribute("cartItemList", cartItemList);
		request.setAttribute("user", loginedUser);
		
		
		RequestDispatcher dispatcher //
        = this.getServletContext().getRequestDispatcher("/WEB-INF/views/cartView.jsp");
		dispatcher.forward(request, response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}

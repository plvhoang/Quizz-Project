package utils;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import model.CartItem;
import model.Product;
import model.UserAccount;
 
public class DBUtils {
 
    public static UserAccount findUser(Connection conn, //
            String userName, String password) throws SQLException {
 
        String sql = "Select a.User_Name, a.Password, a.Acctype from User_Account a " //
                + " where a.User_Name = ? and a.password= ?";
 
        PreparedStatement pstm = conn.prepareStatement(sql);
        pstm.setString(1, userName);
        pstm.setString(2, password);
        ResultSet rs = pstm.executeQuery();
 
        if (rs.next()) {
            String acctype = rs.getString("Acctype");
            UserAccount user = new UserAccount();
            user.setUsername(userName);
            user.setPassword(password);
            user.setAcctype(acctype);
            return user;
        }
        return null;
    }
 
    public static UserAccount findUser(Connection conn, String userName) throws SQLException {
 
        String sql = "Select a.User_Name, a.Password, a.Acctype from User_Account a "//
                + " where a.User_Name = ? ";
 
        PreparedStatement pstm = conn.prepareStatement(sql);
        pstm.setString(1, userName);
 
        ResultSet rs = pstm.executeQuery();
 
        if (rs.next()) {
            String password = rs.getString("Password");
            String acctype = rs.getString("Acctype");
            UserAccount user = new UserAccount();
            user.setUsername(userName);
            user.setPassword(password);
            user.setAcctype(acctype);
            return user;
        }
        return null;
    }

    public static List<Product> queryProduct(Connection conn) throws SQLException {
        String sql = "Select * from Product";
 
        PreparedStatement pstm = conn.prepareStatement(sql);
 
        ResultSet rs = pstm.executeQuery();
        List<Product> list = new ArrayList<Product>();
        while (rs.next()) {
        	int code = rs.getInt("Code");
        	String name = rs.getString("Name");
        	float price = rs.getFloat("Price");
        	int instock = rs.getInt("Instock");
        	String description = rs.getString("description");
        	String manufacturer = rs.getString("manufacturer");
        	String category = rs.getString("category");
        	String condition = rs.getString("conditionn");
        	String imgurl = rs.getString("imgurl");
        	
            Product product = new Product();
            product.setCode(code);
            product.setName(name);
            product.setPrice(price);
            product.setInstock(instock);
            product.setDescription(description);
            product.setManufacturer(manufacturer);
            product.setCategory(category);
            product.setCondition(condition);
            product.setImgurl(imgurl);
            
            list.add(product);
        }
        return list;
    }
 
    public static void insertProduct(Connection conn, Product product) throws SQLException {
        String sql = "Insert into Product (name, price, instock, description, manufacturer, category, conditionn, imgurl) values (?,?,?,?,?,?,?,?)";
 
        PreparedStatement pstm = conn.prepareStatement(sql);
 
        pstm.setString(1, product.getName());
        pstm.setFloat(2, product.getPrice());
        pstm.setInt(3, product.getInstock());
        pstm.setString(4, product.getDescription());
        pstm.setString(5, product.getManufacturer());
        pstm.setString(6, product.getCategory());
        pstm.setString(7, product.getCondition());
        pstm.setString(8, product.getImgurl());
 
        pstm.executeUpdate();
    }
    
    public static Product findProduct(Connection conn, int code) throws SQLException {
        String sql = "Select * from product where code = ?";
 
        PreparedStatement pstm = conn.prepareStatement(sql);
        pstm.setInt(1, code); 
        ResultSet rs = pstm.executeQuery();
        
        while (rs.next()) {
        	String name = rs.getString("Name");
        	float price = rs.getFloat("Price");
        	int instock = rs.getInt("Instock");
        	String description = rs.getString("description");
        	String manufacturer = rs.getString("manufacturer");
        	String category = rs.getString("category");
        	String condition = rs.getString("conditionn");
        	String imgurl = rs.getString("imgurl");
        	
            Product product = new Product();
            product.setCode(code);
            product.setName(name);
            product.setPrice(price);
            product.setInstock(instock);
            product.setDescription(description);
            product.setManufacturer(manufacturer);
            product.setCategory(category);
            product.setCondition(condition);
            product.setImgurl(imgurl);
            return product;
        }
        return null;
    }
    
    public static List<CartItem> queryCartItem(Connection conn, String username) throws SQLException {
    	String sql = "Select * from cart_item where user_name = ?";
    	 
        PreparedStatement pstm = conn.prepareStatement(sql);
        
        pstm.setString(1, username);
 
        ResultSet rs = pstm.executeQuery();
        List<CartItem> list = new ArrayList<CartItem>();
        while (rs.next()) {    
            int code = rs.getInt("product_code");
            int quantity = rs.getInt("quantity");
            float unitprice = rs.getFloat("unit_price");
            CartItem cartItem = new CartItem();
            cartItem.setUsername(username);
            cartItem.setCode(code);
            cartItem.setQuantity(quantity);
            cartItem.setUnitprice(unitprice);
            
            list.add(cartItem);
        }
        return list;
    }
    
    public static void removeCartItem(Connection conn, String username, int code) throws SQLException {
    	String sql = "Delete from cart_item where product_code = ? and user_name = ?";
    	PreparedStatement pstm = conn.prepareStatement(sql);
        pstm.setInt(1, code); 
        pstm.setString(2, username);
        pstm.executeUpdate();
    }
    
    public static void clearCart(Connection conn, String username) throws SQLException {
    	String sql = "Delete from cart_item where user_name = ?";
    	PreparedStatement pstm = conn.prepareStatement(sql);
        pstm.setString(1, username);
        pstm.executeUpdate();
    }
    
    public static void addCartItem(Connection conn, String username, int code, int quantity, float unitprice) throws SQLException {
    	String sql = "Insert into cart_item values (?, ?, ?, ?)";
    	PreparedStatement pstm = conn.prepareStatement(sql);
        pstm.setString(1, username); 
        pstm.setInt(2, code);
        pstm.setInt(3, quantity);
        pstm.setFloat(4, unitprice);
        pstm.executeUpdate();
    }
    
    public static void updateCartItem(Connection conn, String username, int code) throws SQLException {
    	String sql = "Update cart_item set quantity = quantity + 1 where user_name = ? and product_code = ?";
    	PreparedStatement pstm = conn.prepareStatement(sql);
        pstm.setString(1, username); 
        pstm.setInt(2, code);
        pstm.executeUpdate();
    }
    
    public static boolean findCartItem(Connection conn, String username, int code) throws SQLException {
    	String sql = "Select * from cart_item where product_code = ? and user_name = ?";
    	PreparedStatement pstm = conn.prepareStatement(sql);
        pstm.setInt(1, code); 
        pstm.setString(2, username);
        ResultSet rs = pstm.executeQuery();
        boolean empty = true;
        while (rs.next()) {
        	empty = false;
        }
        return empty;
    }
    
}
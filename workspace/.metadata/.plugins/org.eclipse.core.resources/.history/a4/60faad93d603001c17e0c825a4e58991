package utils;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
 
import model.Product;
import model.UserAccount;
 
public class DBUtils {
 
    public static UserAccount findUser(Connection conn, //
            String userName, String password) throws SQLException {
 
        String sql = "Select a.User_Name, a.Password, a.Acctype from User_Account a " //
                + " where a.User_Name = ? and a.password= ?";
 
        PreparedStatement pstm = conn.prepareStatement(sql);
        pstm.setString(1, userName);
        pstm.setString(2, password);
        ResultSet rs = pstm.executeQuery();
 
        if (rs.next()) {
            String acctype = rs.getString("Acctype");
            UserAccount user = new UserAccount();
            user.setUsername(userName);
            user.setPassword(password);
            user.setAcctype(acctype);
            return user;
        }
        return null;
    }
 
    public static UserAccount findUser(Connection conn, String userName) throws SQLException {
 
        String sql = "Select a.User_Name, a.Password, a.Acctype from User_Account a "//
                + " where a.User_Name = ? ";
 
        PreparedStatement pstm = conn.prepareStatement(sql);
        pstm.setString(1, userName);
 
        ResultSet rs = pstm.executeQuery();
 
        if (rs.next()) {
            String password = rs.getString("Password");
            String acctype = rs.getString("Acctype");
            UserAccount user = new UserAccount();
            user.setUsername(userName);
            user.setPassword(password);
            user.setAcctype(acctype);
            return user;
        }
        return null;
    }

    public static List<Product> queryProduct(Connection conn) throws SQLException {
        String sql = "Select * from Product";
 
        PreparedStatement pstm = conn.prepareStatement(sql);
 
        ResultSet rs = pstm.executeQuery();
        List<Product> list = new ArrayList<Product>();
        while (rs.next()) {
        	String name = rs.getString("Name");
        	float price = rs.getFloat("Price");
        	int instock = rs.getInt("Instock");
        	String description = rs.getString("description");
        	String manufacturer = rs.getString("manufacturer");
        	String category = rs.getString("category");
        	String condition = rs.getString("condition");
        	String imgurl = rs.getString("imgurl");
        	
            Product product = new Product();
            product.setName(name);
            product.setPrice(price);
            product.setInstock(instock);
            product.setDescription(description);
            product.setManufacturer(manufacturer);
            product.setCategory(category);
            product.setCondition(condition);
            product.setImgurl(imgurl);
            
            list.add(product);
        }
        return list;
    }
 
}